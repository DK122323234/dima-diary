name: JavaFX Multi-Platform CI/CD

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  jlink-build:
    name: JLink for Tags
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest  # Windows x64
          - ubuntu-latest   # Linux x64
          - ubuntu-arm64    # Linux ARM64
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23 with JavaFX
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'azul'  # или 'temurin', 'adoptium'
          # Убедитесь, что JDK 23 включает JavaFX
          cache: maven

      - name: Build with tests
        run: mvn --batch-mode clean verify

      - name: Create JLink
        run: |
          mvn --batch-mode clean javafx:jlink
          mkdir -p target/jlink/${{ matrix.os }}
          cp -r target/app/* target/jlink/${{ matrix.os }}

      - name: Upload JLink artifacts
        uses: actions/upload-artifact@v4
        with:
          name: javafx-jlink
          path: target/jlink/${{ matrix.os }}

  fat-jar-build:
    name: Fat Jar for Master
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'master' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23 with JavaFX
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'azul'  # или 'temurin', 'adoptium'
          cache: maven

      - name: Build with tests
        run: mvn --batch-mode clean verify

      - name: Create Fat Jar
        run: |
          mvn --batch-mode clean package
          mkdir -p target/fat-jar
          cp target/*.jar target/fat-jar/

      - name: Upload Fat Jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: javafx-fat-jar
          path: target/fat-jar